// REGULAR EXPRESSIONS. MEMORY MANAGEMENT

// üìÄüíøüíøüíø

// 8-1.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏–º–µ —á–∏ –ø–µ—Ä—à–∏–π —Å–∏–º–≤–æ–ª –≤ —Ä—è–¥–∫—É –Ω–∞–ø–∏—Å–∞–Ω–∏–π –≤ –≤–µ—Ä—Ö–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, —á–∏ –Ω—ñ.
// –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏:
// upperCase('regexp');
// "String's not starts with uppercase character"
// upperCase('RegExp');
// "String's starts with uppercase character"
const checkUpperCase = function (str) {
  const rexExp = /^[A-Z]/;
  if (rexExp.test(str)) {
    return "String's starts with uppercase character";
  } else {
    return "String's not starts with uppercase character";
  }
};

// 8-2.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ä—è–¥–∫–æ–≤—ñ –¥–∞–Ω—ñ —ñ –≤–∏–∫–æ–Ω—É—î –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ —ó—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –µ–º–µ–π–ª—É. –í–∞–ª—ñ–¥–Ω–∏–º–∏ –≤–≤–∞–∂–∞—é—Ç—å—Å—è
// –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ –Ω–∞ —Ä—ñ–∑–Ω–∏—Ö –ø–æ–∑–∏—Ü—ñ—è—Ö.
// –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏:
// checkEmail("Qmail2@gmail.com");
// true
const checkEmail = function (email) {
  const rexExp =
    /(^\w+[!#$%&'*+-/=? ^_`{|}~]?\w+)\@(\w+([\.-]?\w+)\.(\w{2,6})+$)/;
  if (rexExp.test(email)) {
    return "E-mail is valid";
  } else {
    return "E-mail is not valid";
  }
};

// 8-3.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω–∏–π –≤–∏—Ä–∞–∑, —è–∫–∏–π –≤ —Ä—è–¥–∫–æ–≤–æ–º—É —Ç–µ–∫—Å—Ç—ñ 2 –ø—ñ–¥—Å—Ç—Ä—ñ—á–∫–∏ –±—É–¥–µ –º—ñ–Ω—è—Ç–∏ –º—ñ—Å—Ü—è–º–∏.
// –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏:
// –í—Ö—ñ–¥–Ω–∏–π —Ä—è–¥–æ–∫    "Java Script"
// –í–∏—Ö—ñ–¥    ‚ÄúScript, Java‚Äù

const changeString = function (string) {
  return string.replace(/(\w+) (\w+)/, "$2, $1");
};

// 8-4.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏–º–µ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é –Ω–æ–º–µ—Ä–∞ –±–∞–Ω–∫—ñ–≤—Å—å–∫–æ—ó –∫–∞—Ä—Ç–∏ (9999-9999-9999-9999).
const checkNumberPhone = function (numberPhone) {
  const rexExp = /\d{4}[-]\d{4}[-]\d{4}[-]\d{4}/;

  if (rexExp.test(numberPhone)) {
    return "The bank card number is valid";
  } else {
    return "The bank card number is not valid";
  }
};

// 8-5.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ä—è–¥–∫–æ–≤—ñ –¥–∞–Ω—ñ —ñ –≤–∏–∫–æ–Ω—É—î –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ —ó—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –µ–º–µ–π–ª—É.
// –í–∏–º–æ–≥–∏:
// ‚Ä¢  –¶–∏—Ñ—Ä–∏ (0-9).
// ‚Ä¢  –¢—ñ–ª—å–∫–∏ –ª–∞—Ç–∏–Ω—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏ –≤ –≤–µ–ª–∏–∫–æ–º—É (A-Z) —ñ –º–∞–ª–æ–º—É (a-z) —Ä–µ–≥—ñ—Å—Ç—Ä–∞—Ö.
// ‚Ä¢  –í —Ç—ñ–ª—ñ –µ–º–µ–π–ª–∞ –¥–æ–ø—É—Å—Ç–∏–º—ñ –ª–∏—à–µ—ñ —Å–∏–º–≤–æ–ª–∏ ‚Äú_‚Äù —ñ ‚Äú-‚Äù. –ê–ª–µ –≤–æ–Ω–∏ –Ω–µ –º–æ–∂—É—Ç—å –±—É—Ç–∏ 1-–∏–º —Å–∏–º–≤–æ–ª–æ–º –µ–º–µ–π–ª—É.
//  ‚Ä¢  –°–∏–º–≤–æ–ª ‚Äú-‚Äù –Ω–µ –º–æ–∂–µ –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—è.
const validEmail = function (email) {
  const rexExp = /^\w+[\-]?\w+\@(\w+([\-]?\w+)\.(\w{2,6})$)/;
  if (rexExp.test(email)) {
    return "Email is correct!";
  } else {
    return "Email is not correct!";
  }
};

// console.log(validEmail("my_mail@gmail.com"));
// "Email is correct!"
// console.log(validEmail("#my_mail@gmail.com"));
// "Email is not correct!"
// console.log(validEmail("my_ma--il@gmail.com"));
// "Email is not correct!"

// 8-6.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –ª–æ–≥—ñ–Ω–∞. –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –ª–æ–≥—ñ–Ω - —Ä—è–¥–æ–∫ –≤—ñ–¥ 2 –¥–æ 10 —Å–∏–º–≤–æ–ª—ñ–≤, —â–æ –º—ñ—Å—Ç–∏—Ç—å –ª–∏—à–µ –±—É–∫–≤–∏ —Ç–∞ —á–∏—Å–ª–∞,
// –Ω–æ–º–µ—Ä –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–µ—Ä—à–∏–º.
// –§—É–Ω–∫—Ü—ñ—è –º–∞—î –ø—Ä–∏–π–º–∞—Ç–∏ —Ä—è–¥–æ–∫ —ñ –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ —É—Å—ñ —á–∏—Å–ª–∞ –≤ —Ü—å–æ–º—É —Ä—è–¥–∫—É, –≤–∫–ª—é—á–∞—é—á–∏ —á–∏—Å–ª–∞ –∑ –ø–ª–∞–≤–∞—é—á–æ—é –∫–æ–º–æ—é (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 3.4).
// –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏:
// checkLogin('ee1.1ret3');
// true
// //1.1, 3


const checkLogin = function (login) {
  const rexExp = /^[A-Za-z][a-zA-Z\d.]{1,9}$/;
  const numbers = login.match(/[\d]*\.[\d]+/g);
  const loginValid = rexExp.test(login);
  return { loginValid, numbers };
};
// checkLogin('ee1*1ret3');
// false
//1, 1, 3
1;
